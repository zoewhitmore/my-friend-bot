name: Deploy to Cloudflare Workers

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      TELEGRAM_WEBHOOK_SECRET: ${{ secrets.TELEGRAM_WEBHOOK_SECRET }}
      OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}
      SYSTEM_PROMPT: ${{ secrets.SYSTEM_PROMPT }}
      OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
      TELEGRAM_API_BASE: ${{ secrets.TELEGRAM_API_BASE }}
      KV_NAMESPACE_TITLE: telegram-openai-worker-HISTORY
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm i
      - name: Ensure KV namespace and generate config
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          set -euo pipefail
          echo "Ensuring KV namespace: $KV_NAMESPACE_TITLE"
          # Find existing namespace via Cloudflare API
          LIST_JSON=$(curl -s -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/storage/kv/namespaces")
          KV_ID=$(echo "$LIST_JSON" | node -e "let s='';process.stdin.on('data',d=>s+=d).on('end',()=>{const j=JSON.parse(s);const t=process.env.KV_NAMESPACE_TITLE;const f=(j.result||[]).find(n=>n.title===t);console.log(f?f.id:'');})")
          if [ -z "$KV_ID" ]; then
            echo "Creating KV namespace: $KV_NAMESPACE_TITLE"
            CREATE_JSON=$(curl -s -X POST \
              -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
              -H "Content-Type: application/json" \
              -d "{\"title\":\"$KV_NAMESPACE_TITLE\"}" \
              "https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/storage/kv/namespaces")
            KV_ID=$(echo "$CREATE_JSON" | node -e "let s='';process.stdin.on('data',d=>s+=d).on('end',()=>{const j=JSON.parse(s);console.log(j.result&&j.result.id?j.result.id:'');})")
          fi
          echo "KV_NAMESPACE_ID=$KV_ID" >> $GITHUB_ENV
          cp wrangler.toml wrangler.generated.toml
          printf "\n[[kv_namespaces]]\n" >> wrangler.generated.toml
          printf "binding = \"HISTORY\"\n" >> wrangler.generated.toml
          printf "id = \"%s\"\n" "$KV_ID" >> wrangler.generated.toml

      # Устанавливаем секреты воркера из секретов GitHub репозитория
      - name: Put secret TELEGRAM_BOT_TOKEN
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            TELEGRAM_BOT_TOKEN
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Put secret OPENAI_API_KEY
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            OPENAI_API_KEY
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Put secret TELEGRAM_WEBHOOK_SECRET (optional)
        if: ${{ env.TELEGRAM_WEBHOOK_SECRET != '' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            TELEGRAM_WEBHOOK_SECRET
        env:
          TELEGRAM_WEBHOOK_SECRET: ${{ secrets.TELEGRAM_WEBHOOK_SECRET }}

      - name: Put optional OPENAI_MODEL
        if: ${{ env.OPENAI_MODEL != '' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            OPENAI_MODEL
        env:
          OPENAI_MODEL: ${{ secrets.OPENAI_MODEL }}

      - name: Put optional SYSTEM_PROMPT
        if: ${{ env.SYSTEM_PROMPT != '' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            SYSTEM_PROMPT
        env:
          SYSTEM_PROMPT: ${{ secrets.SYSTEM_PROMPT }}

      - name: Put optional OPENAI_BASE_URL
        if: ${{ env.OPENAI_BASE_URL != '' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            OPENAI_BASE_URL
        env:
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}

      - name: Put optional TELEGRAM_API_BASE
        if: ${{ env.TELEGRAM_API_BASE != '' }}
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: version
          secrets: |
            TELEGRAM_API_BASE
        env:
          TELEGRAM_API_BASE: ${{ secrets.TELEGRAM_API_BASE }}

      - name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy -c wrangler.generated.toml


